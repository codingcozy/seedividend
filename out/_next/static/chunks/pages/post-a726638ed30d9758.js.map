{"version":3,"file":"static/chunks/pages/post-a726638ed30d9758.js","mappings":"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","sources":["webpack://_N_E/?4772","webpack://_N_E/./components/PostList/index.tsx","webpack://_N_E/./components/SectionTitle/index.tsx","webpack://_N_E/./pages/post/index.tsx","webpack://_N_E/./components/PostList/PostList.module.scss","webpack://_N_E/./components/SectionTitle/SectionTitle.module.scss","webpack://_N_E/./pages/post/posts.module.scss","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/post\",\n      function () {\n        return require(\"private-next-pages/post/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/post\"])\n      });\n    }\n  ","import PostType from \"@/interfaces/post\";\nimport Link from \"next/link\";\nimport classNames from \"classnames/bind\";\nimport React, { useEffect, useState } from \"react\";\nimport style from \"./PostList.module.scss\";\nimport Image from \"next/image\";\nimport moment from \"moment\";\nimport { AUTHOR } from \"@/lib/constants\";\n// import Fire from \"./assets/fire.svg\";\n\nconst cx = classNames.bind(style);\n\ninterface PostListProps {\n  postList: PostType[];\n}\n\nexport const PostList = ({ postList }: PostListProps) => {\n  const [isClient, setIsClient] = useState(false);\n\n  const generateRandomReaction = () => {\n    const reactionList = [];\n    for (let i = 0; i < 5; i++) {\n      reactionList.push(Math.random() < 0.5 ? 0 : Math.floor(Math.random() * 10) + 1);\n    }\n\n    return (\n      <>\n        {reactionList.map((reaction, i) => (\n          <span className={cx(\"reaction_item\", { hide: reaction === 0 })} key={i}></span>\n        ))}\n        <span className={cx(\"reaction_text\")}>{sumArray(reactionList)} reactions</span>\n      </>\n    );\n  };\n\n  const randomCommentCount = () => {\n    return Math.floor(Math.random() * 10);\n  };\n\n  function sumArray(arr: number[]) {\n    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n      sum += arr[i];\n    }\n    return sum;\n  }\n\n  useEffect(() => {\n    setIsClient(true);\n  }, []);\n\n  return (\n    <>\n      <div className={cx(\"post_list\")}>\n        {postList.map((post, i) => {\n          const fromNow = moment(post.date, \"YYYYMMDD-HH:mm:ss\").fromNow();\n          const date = String(fromNow).includes(\"hours\") ? fromNow : moment(post.date).format(\"MMM D, YYYY\");\n          return (\n            <Link className={cx(\"post_item\")} href={`/post/${post.slug}`} aria-label={post.title} key={i}>\n              <div className={cx(\"thumbnail_wrap\")}>\n                <Image\n                  src={post.coverImage ? post.coverImage : `/assets/no-image.jpg`}\n                  className={cx(\"thumbnail\")}\n                  alt={post.title}\n                  width={100}\n                  height={100}\n                />\n              </div>\n              <div className={cx(\"text_area\")}>\n                <div className={cx(\"profile_area\")}>\n                  <div className={cx(\"profile_image_wrap\")}>\n                    <Image\n                      src={\"/favicons/apple-icon-114x114.png\"}\n                      className={cx(\"profile\")}\n                      alt={post.title}\n                      width={20}\n                      height={20}\n                    />\n                  </div>\n                  <span className={cx(\"writer\")}>{AUTHOR}</span>\n                </div>\n                <strong className={cx(\"title\")}>{post.title}</strong>\n                {/* <p className={cx(\"description\")}>{post.description}</p> */}\n                {/* <ul className={cx(\"tag_list\")}>\n                  {post.tag.map((tag, i) => (\n                    <li className={cx(\"tag_item\")} key={i}>\n                      <Link className={cx(\"tag_link\")} href={`/tags/${tag}`}>\n                        <span>#</span>\n                        {tag}\n                      </Link>\n                    </li>\n                  ))}\n                </ul> */}\n                {isClient && (\n                  <div className={cx(\"reaction_area\")}>\n                    <div className={cx(\"reaction_list\")}>\n                      {generateRandomReaction()}\n                      {/* <span className={cx(\"reaction_text\")}>{randomCommentCount()} reactions</span> */}\n                    </div>\n                    <div className={cx(\"comment\")}>\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"24\"\n                        height=\"24\"\n                        role=\"img\"\n                        aria-labelledby=\"a9r26cjkehaw9aroeeenqzf7sqj1obph\"\n                      >\n                        <title id=\"a9r26cjkehaw9aroeeenqzf7sqj1obph\">Comments</title>\n                        <path d=\"M10.5 5h3a6 6 0 110 12v2.625c-3.75-1.5-9-3.75-9-8.625a6 6 0 016-6zM12 15.5h1.5a4.501 4.501 0 001.722-8.657A4.5 4.5 0 0013.5 6.5h-3A4.5 4.5 0 006 11c0 2.707 1.846 4.475 6 6.36V15.5z\"></path>\n                      </svg>\n                      {randomCommentCount()} comment\n                    </div>\n                  </div>\n                )}\n                <div className={cx(\"meta\")}>\n                  <span className={cx(\"date\")}>{date}</span>\n                  <span className={cx(\"reading_time\")}>{post.readingTime} min read</span>\n                  <span className={cx(\"bookmark\")}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" aria-hidden=\"true\">\n                      <path d=\"M6.75 4.5h10.5a.75.75 0 01.75.75v14.357a.375.375 0 01-.575.318L12 16.523l-5.426 3.401A.375.375 0 016 19.607V5.25a.75.75 0 01.75-.75zM16.5 6h-9v11.574l4.5-2.82 4.5 2.82V6z\"></path>\n                    </svg>\n                  </span>\n                </div>\n              </div>\n            </Link>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default PostList;\n","import React from \"react\";\nimport style from \"./SectionTitle.module.scss\";\nimport classnames from \"classnames/bind\";\n\nconst cx = classnames.bind(style);\n\ninterface SectoinTitleProps {\n  title: React.ReactNode | string;\n}\n\nexport const SectionTitle = ({ title }: SectoinTitleProps) => {\n  return <h2 className={cx(\"section_title\")}>{title}</h2>;\n};\n\nexport default SectionTitle;\n","import { useRouter } from \"next/router\";\nimport { getPostCategories, getPosts } from \"@/lib/api\";\nimport Header from \"@/components/Header\";\nimport style from \"./posts.module.scss\";\nimport classnames from \"classnames/bind\";\nimport PostList from \"@/components/PostList\";\nimport SectionTitle from \"@/components/SectionTitle\";\nimport PostType from \"@/interfaces/post\";\nimport CustomHead from \"@/components/CustomHead\";\nimport { SITE_NAME } from \"@/lib/constants\";\n\nconst cx = classnames.bind(style);\n\ntype Props = {\n  categoryList: string[];\n  allPosts: PostType[];\n  morePosts: PostType[];\n  preview?: boolean;\n};\n\nexport default function Post({ allPosts, categoryList }: Props) {\n  const router = useRouter();\n  const title = `${SITE_NAME} | Post`;\n  // if (!router.isFallback && !project?.slug) {\n  //   return <ErrorPage statusCode={404} />;\n  // }\n  return (\n    <>\n      {router.isFallback ? (\n        \" Loading…\"\n      ) : (\n        <>\n          <CustomHead type=\"home\" />\n          <div className={cx(\"container\", \"-list\")}>\n            <Header postList={allPosts} categoryList={categoryList} />\n            <div className={cx(\"inner\")}>\n              <article>\n                <SectionTitle title=\"Posts\"></SectionTitle>\n                <div className={cx(\"project_list\")}>\n                  <PostList postList={allPosts}></PostList>\n                </div>\n              </article>\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n\ntype Params = {\n  params: {\n    slug: string;\n  };\n  query: {\n    page: string;\n  };\n};\n\nexport async function getStaticProps(props: any) {\n  const allPosts = await getPosts({\n    fields: [\"title\", \"date\", \"slug\", \"author\", \"coverImage\", \"description\", \"ogImage\", \"tag\", \"readingTime\"],\n  });\n\n  const categoryList = await getPostCategories();\n\n  return {\n    props: {\n      allPosts,\n      categoryList,\n    },\n  };\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post_list\":\"PostList_post_list__or0rl\",\"post_item\":\"PostList_post_item__gAdVi\",\"title\":\"PostList_title__loLkl\",\"thumbnail_wrap\":\"PostList_thumbnail_wrap__YuxdB\",\"thumbnail\":\"PostList_thumbnail__6_oQk\",\"text_area\":\"PostList_text_area__Hzd11\",\"profile_area\":\"PostList_profile_area___aTjn\",\"profile_image_wrap\":\"PostList_profile_image_wrap__tCTuE\",\"profile\":\"PostList_profile__VGF_a\",\"description\":\"PostList_description__4f3RM\",\"tag_list\":\"PostList_tag_list__esmQD\",\"tag_link\":\"PostList_tag_link__Uoytb\",\"reaction_area\":\"PostList_reaction_area__wPga2\",\"reaction_list\":\"PostList_reaction_list__OMkQv\",\"reaction_item\":\"PostList_reaction_item__skpHM\",\"reaction_text\":\"PostList_reaction_text__ZARah\",\"hide\":\"PostList_hide__o3Um5\",\"comment\":\"PostList_comment__bIrwL\",\"meta\":\"PostList_meta__VCFLX\",\"reading_time\":\"PostList_reading_time__6CBMQ\",\"bookmark\":\"PostList_bookmark__PCpOK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section_title\":\"SectionTitle_section_title__HS_xr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post_content\":\"posts_post_content__n_L6j\",\"container\":\"posts_container__NyRU3\",\"-list\":\"posts_-list__uNgdi\",\"inner\":\"posts_inner__i3n_i\",\"project_list\":\"posts_project_list__SjBxj\",\"ifram_wrap\":\"posts_ifram_wrap__glp9I\",\"iframe\":\"posts_iframe__lRdaY\",\"meta\":\"posts_meta__cR7lu\",\"date\":\"posts_date__ctqHI\",\"profile_wrap\":\"posts_profile_wrap__mslMl\",\"profile_image_wrap\":\"posts_profile_image_wrap__kPikV\",\"textarea\":\"posts_textarea__w_iKT\",\"info\":\"posts_info__5KJdN\",\"reading_time\":\"posts_reading_time__f7YPP\",\"post_title\":\"posts_post_title__EbxNx\",\"tag_area\":\"posts_tag_area__sTSlv\",\"tag\":\"posts_tag__9cdg9\",\"view_badge\":\"posts_view_badge__tcbfm\"};"],"names":["window","__NEXT_P","push","__webpack_require__","cx","classNames","style","PostList","postList","param","isClient","setIsClient","useState","generateRandomReaction","reactionList","i","Math","random","floor","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","Fragment","map","reaction","jsx","span","className","hide","sumArray","arr","sum","length","randomCommentCount","useEffect","div","post","fromNow","moment","date","String","includes","format","Link","href","concat","slug","aria-label","title","Image","src","coverImage","alt","width","height","AUTHOR","strong","svg","xmlns","role","aria-labelledby","id","path","d","readingTime","aria-hidden","__webpack_exports__","classnames","SectionTitle","h2","Post","allPosts","categoryList","router","useRouter","SITE_NAME","isFallback","CustomHead","type","Header","article","module","exports"],"sourceRoot":""}