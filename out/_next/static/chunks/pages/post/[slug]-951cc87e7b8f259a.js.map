{"version":3,"file":"static/chunks/pages/post/[slug]-951cc87e7b8f259a.js","mappings":"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","sources":["webpack://_N_E/?4e61","webpack://_N_E/./components/GoogleAd/index.tsx","webpack://_N_E/./pages/post/[slug].tsx","webpack://_N_E/./pages/post/posts.module.scss","webpack://_N_E/./node_modules/next/error.js","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/post/[slug]\",\n      function () {\n        return require(\"private-next-pages/post/[slug].tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/post/[slug]\"])\n      });\n    }\n  ","import React, { useEffect } from \"react\";\ndeclare global {\n  interface Window {\n    adsbygoogle: any;\n  }\n}\n\nconst GoogleAd = () => {\n  useEffect(() => {\n    try {\n      (window.adsbygoogle = window.adsbygoogle || []).push({});\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  return (\n    <div className=\"googleAd-container\">\n      <ins className=\"adsbygoogle\" style={{ display: \"block\" }} data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"1107185301\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins>\n    </div>\n  );\n};\n\nexport default GoogleAd;\n","import { useRouter } from \"next/router\";\nimport ErrorPage from \"next/error\";\nimport { getPostCategories, getPosts } from \"@/lib/api\";\nimport type PostType from \"@/interfaces/post\";\nimport Header from \"@/components/Header\";\nimport style from \"./posts.module.scss\";\nimport classnames from \"classnames/bind\";\nimport Image from \"next/image\";\nimport { serialize } from \"next-mdx-remote/serialize\";\nimport { MDXRemote } from \"next-mdx-remote\";\nimport rehypeHighlight from \"rehype-highlight\";\nimport remarkDirective from \"remark-directive\";\nimport { visit } from \"unist-util-visit\";\n\nimport markdownIt from \"markdown-it\";\nimport highlightjs from \"markdown-it-highlightjs\";\nimport markdownContainer from \"markdown-it-container\";\nimport { AUTHOR, LANG_LOCALE, SITE_NAME, SITE_URL } from \"@/lib/constants\";\nimport CustomHead from \"@/components/CustomHead\";\nimport GoogleAd from \"@/components/GoogleAd\";\nimport moment from \"moment\";\nimport Link from \"next/link\";\nimport { useEffect, useState } from \"react\";\nimport markdownToHtml from \"@/lib/markdownToHtml\";\n\nconst cx = classnames.bind(style);\nconst components = { Image, GoogleAd };\ntype Props = {\n  categoryList: string[];\n  allPosts: PostType[];\n  post: PostType;\n  morePosts: PostType[];\n  preview?: boolean;\n  content: any;\n};\n\nexport default function Post({ allPosts, post, content, categoryList }: Props) {\n  const router = useRouter();\n\n  if (!router.isFallback && !post?.slug) {\n    return <ErrorPage statusCode={404} />;\n  }\n\n  return (\n    <>\n      {router.isFallback ? (\n        \" Loading…\"\n      ) : (\n        <>\n          <CustomHead type=\"post\" post={post} />\n          <Header postList={allPosts} categoryList={categoryList}></Header>\n          <main className={cx(\"container\")}>\n            <div className={cx(\"inner\")}>\n              <h1 className={cx(\"post_title\")}>{post.title}</h1>\n              <div className={cx(\"meta\")}>\n                <div className={cx(\"profile_wrap\")}>\n                  <div className={cx(\"profile_image_wrap\")}>\n                    <Image\n                      src={\"/favicons/apple-icon-114x114.png\"}\n                      className={cx(\"profile\")}\n                      alt={post.title}\n                      width={44}\n                      height={44}\n                    />\n                  </div>\n                  <div className={cx(\"textarea\")}>\n                    <span className={cx(\"writer\")}>{AUTHOR}</span>\n                    <span className={cx(\"info\")}>\n                      <span className={cx(\"date\")}>{`작성일자 ${moment(post.date).format(\"DD/MM/YYYY\")}`}</span>\n                      <span className={cx(\"reading_time\")}>{post.readingTime} min read</span>\n                    </span>\n                  </div>\n                </div>\n\n                <Image\n                  width={\"50\"}\n                  height={\"50\"}\n                  className={cx(\"view_badge\")}\n                  src={`https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fallround-coder.github.io${router.asPath}&count_bg=%2379C83D&title_bg=%23555555&icon=&icon_color=%23E7E7E7&title=views&edge_flat=false`}\n                  alt=\"\"\n                />\n              </div>\n\n              <article className={cx(\"post_content\")}>\n                {/* <div dangerouslySetInnerHTML={{ __html: md.render(post.content) }}></div> */}\n                <div dangerouslySetInnerHTML={{ __html: content }} />\n                {/* <MDXRemote {...content} components={components} /> */}\n              </article>\n            </div>\n          </main>\n        </>\n      )}\n    </>\n  );\n}\n\nexport function myRemarkPlugin() {\n  return (tree: any) => {\n    visit(tree, (node) => {\n      if (node.type === \"textDirective\" || node.type === \"leafDirective\" || node.type === \"containerDirective\") {\n        if (node.name === \"tip\") {\n          const data = node.data || (node.data = {});\n          const tagName = node.type === \"textDirective\" ? \"span\" : \"div\";\n\n          data.hName = tagName;\n          // data.hProperties = h(tagName, node.attributes).properties;\n          data.hProperties = { className: [\"tip\"] };\n        }\n\n        if (node.name === \"warning\") {\n          const data = node.data || (node.data = {});\n          const tagName = node.type === \"textDirective\" ? \"span\" : \"div\";\n\n          data.hName = tagName;\n          data.hProperties = { className: [\"warning\"] };\n        }\n      }\n    });\n  };\n}\n\ntype Params = {\n  params: {\n    slug: string;\n  };\n};\n\nexport async function getStaticProps({ params }: Params) {\n  const allPosts = await getPosts({\n    fields: [\"title\"],\n  });\n\n  const [post]: any = await getPosts({\n    file: params.slug,\n    fields: [\n      \"title\",\n      \"description\",\n      \"date\",\n      \"slug\",\n      \"author\",\n      \"content\",\n      \"ogImage\",\n      \"coverImage\",\n      \"date\",\n      \"tag\",\n      \"readingTime\",\n    ],\n  });\n\n  const categoryList = await getPostCategories();\n\n  const content = await markdownToHtml(post.content || \"\");\n\n  return {\n    props: {\n      post: {\n        ...post,\n      },\n      content,\n      allPosts,\n      categoryList,\n    },\n  };\n}\n\nexport async function getStaticPaths() {\n  const posts: any = await getPosts({ fields: [\"slug\"] });\n  let paths = [];\n\n  for (let i in posts) {\n    const post = posts[i];\n\n    paths.push({\n      params: {\n        slug: post.slug,\n      },\n    });\n  }\n\n  return {\n    paths,\n    fallback: false,\n  };\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post_content\":\"posts_post_content__n_L6j\",\"container\":\"posts_container__NyRU3\",\"-list\":\"posts_-list__uNgdi\",\"inner\":\"posts_inner__i3n_i\",\"project_list\":\"posts_project_list__SjBxj\",\"ifram_wrap\":\"posts_ifram_wrap__glp9I\",\"iframe\":\"posts_iframe__lRdaY\",\"meta\":\"posts_meta__cR7lu\",\"date\":\"posts_date__ctqHI\",\"profile_wrap\":\"posts_profile_wrap__mslMl\",\"profile_image_wrap\":\"posts_profile_image_wrap__kPikV\",\"textarea\":\"posts_textarea__w_iKT\",\"info\":\"posts_info__5KJdN\",\"reading_time\":\"posts_reading_time__f7YPP\",\"post_title\":\"posts_post_title__EbxNx\",\"tag_area\":\"posts_tag_area__sTSlv\",\"tag\":\"posts_tag__9cdg9\",\"view_badge\":\"posts_view_badge__tcbfm\"};","module.exports = require('./dist/pages/_error')\n"],"names":["window","__NEXT_P","push","__webpack_require__","cx","classnames","style","Image","Post","param","allPosts","post","content","categoryList","router","useRouter","isFallback","slug","jsx_runtime","jsx","Fragment","jsxs","CustomHead","type","Header","postList","main","className","div","h1","title","src","alt","width","height","span","AUTHOR","concat","moment","date","format","readingTime","asPath","article","dangerouslySetInnerHTML","__html","ErrorPage","statusCode","myRemarkPlugin","visit","tree","node","name","data","tagName","hName","hProperties","module","exports"],"sourceRoot":""}