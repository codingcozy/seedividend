{"version":3,"file":"static/chunks/pages/admin-b348992ee2696f3b.js","mappings":"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","sources":["webpack://_N_E/","webpack://_N_E/./hooks/useAdminAuth.ts","webpack://_N_E/./pages/admin/index.tsx","webpack://_N_E/./pages/admin/admin.module.scss","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/admin\",\n      function () {\n        return require(\"private-next-pages/admin/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/admin\"])\n      });\n    }\n  ","import { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\n\n/**\n * Custom hook to handle admin page authorization\n * Restricts access to admin pages in production mode\n * @returns An object containing authorization status\n */\nexport default function useAdminAuth() {\n  const router = useRouter();\n  const [isAuthorized, setIsAuthorized] = useState<boolean>(false);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    // In development mode, allow access\n    // In production mode, redirect to home\n    if (process.env.NODE_ENV !== \"development\") {\n      router.replace(\"/\");\n    } else {\n      setIsAuthorized(true);\n    }\n    setIsLoading(false);\n  }, [router]);\n\n  return { isAuthorized, isLoading };\n}\n","import { useRouter } from \"next/router\";\nimport { getPostCategories, getPosts } from \"@/lib/api\";\nimport Header from \"@/components/Header\";\nimport style from \"./admin.module.scss\";\nimport classnames from \"classnames/bind\";\nimport PostType from \"@/interfaces/post\";\nimport CustomHead from \"@/components/CustomHead\";\nimport { CATEGORY, SITE_NAME } from \"@/lib/constants\";\nimport { useState } from \"react\";\nimport Link from \"next/link\";\nimport useAdminAuth from \"@/hooks/useAdminAuth\";\n\nconst cx = classnames.bind(style);\n\ntype Props = {\n  categoryList: string[];\n  allPosts: PostType[];\n  morePosts: PostType[];\n  preview?: boolean;\n};\n\nexport default function Post({ allPosts, categoryList }: Props) {\n  const router = useRouter();\n  const title = `${SITE_NAME} | Post`;\n  const [selectedPosts, setSelectedPosts] = useState<string[]>([]);\n  const [deletingPosts, setDeletingPosts] = useState<string[]>([]);\n  const [posts, setPosts] = useState<PostType[]>(allPosts);\n  const [isPublishing, setIsPublishing] = useState(false);\n\n  // Use the admin auth hook\n  const { isAuthorized, isLoading } = useAdminAuth();\n\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`;\n  };\n\n  const toggleSelectPost = (slug: string) => {\n    if (selectedPosts.includes(slug)) {\n      setSelectedPosts(selectedPosts.filter((id) => id !== slug));\n    } else {\n      setSelectedPosts([...selectedPosts, slug]);\n    }\n  };\n\n  const toggleSelectAll = () => {\n    if (selectedPosts.length === posts.length) {\n      setSelectedPosts([]);\n    } else {\n      setSelectedPosts(posts.map((post) => post.slug));\n    }\n  };\n\n  const handleTitleClick = (slug: string) => {\n    router.push(`/post/${slug}/`);\n  };\n\n  const handleDeletePost = async (slug: string) => {\n    if (window.confirm(\"정말로 이 포스트를 삭제하시겠습니까?\")) {\n      try {\n        // Add the post to the deleting state\n        setDeletingPosts((prev) => [...prev, slug]);\n\n        // Updated API endpoint\n        const response = await fetch(`http://localhost:3001/api/delete-post?slug=${slug}`, {\n          method: \"DELETE\",\n        });\n\n        if (!response.ok) {\n          const errorData = await response.json();\n          throw new Error(errorData.message || \"Failed to delete post\");\n        }\n\n        const result = await response.json();\n\n        // Update the posts list after deletion\n        setPosts(posts.filter((post) => post.slug !== slug));\n\n        // If the post was selected, remove it from selected posts\n        if (selectedPosts.includes(slug)) {\n          setSelectedPosts(selectedPosts.filter((id) => id !== slug));\n        }\n      } catch (error) {\n        console.error(\"Error deleting post:\", error);\n        alert(`포스트 삭제 중 오류가 발생했습니다: ${error instanceof Error ? error.message : \"알 수 없는 오류\"}`);\n      } finally {\n        // Remove the post from the deleting state\n        setDeletingPosts((prev) => prev.filter((id) => id !== slug));\n      }\n    }\n  };\n\n  const handleDeleteSelected = async () => {\n    if (selectedPosts.length === 0) {\n      alert(\"삭제할 포스트를 선택해주세요.\");\n      return;\n    }\n\n    if (window.confirm(`선택한 ${selectedPosts.length}개의 포스트를 삭제하시겠습니까?`)) {\n      // We'll delete one by one to ensure we handle each properly\n      let successCount = 0;\n      let failCount = 0;\n\n      for (const slug of selectedPosts) {\n        try {\n          setDeletingPosts((prev) => [...prev, slug]);\n\n          // Updated API endpoint\n          const response = await fetch(`http://localhost:3001/api/delete-post?slug=${slug}`, {\n            method: \"DELETE\",\n          });\n\n          if (!response.ok) {\n            throw new Error(\"Failed to delete post\");\n          }\n\n          successCount++;\n\n          // Remove the post from the deleting state\n          setDeletingPosts((prev) => prev.filter((id) => id !== slug));\n        } catch (error) {\n          failCount++;\n          console.error(`Error deleting post ${slug}:`, error);\n\n          // Remove the post from the deleting state\n          setDeletingPosts((prev) => prev.filter((id) => id !== slug));\n        }\n      }\n\n      // Update the posts list after deletion\n      setPosts(posts.filter((post) => !selectedPosts.includes(post.slug)));\n\n      // Clear selected posts\n      setSelectedPosts([]);\n\n      alert(`${successCount}개 포스트가 삭제되었습니다. ${failCount > 0 ? `${failCount}개 포스트 삭제 실패.` : \"\"}`);\n    }\n  };\n\n  const handlePublish = async () => {\n    if (window.confirm(\"블로그를 발행하시겠습니까?\")) {\n      try {\n        setIsPublishing(true);\n\n        const response = await fetch(\"http://localhost:3001/api/publish-post\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        });\n\n        if (!response.ok) {\n          const errorData = await response.json();\n          throw new Error(errorData.message || \"Failed to publish blog\");\n        }\n\n        const result = await response.json();\n        alert(\"블로그가 성공적으로 발행되었습니다.\");\n      } catch (error) {\n        console.error(\"Error publishing blog:\", error);\n        alert(`블로그 발행 중 오류가 발생했습니다: ${error instanceof Error ? error.message : \"알 수 없는 오류\"}`);\n      } finally {\n        setIsPublishing(false);\n      }\n    }\n  };\n\n  const isDeleting = (slug: string) => deletingPosts.includes(slug);\n\n  // Show loading or unauthorized message\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!isAuthorized) {\n    return <div>Unauthorized access</div>;\n  }\n\n  return (\n    <>\n      {router.isFallback ? (\n        \" Loading…\"\n      ) : (\n        <>\n          <CustomHead type=\"home\" />\n          <div className={cx(\"container\", \"-list\")}>\n            <Header postList={posts} categoryList={categoryList} />\n            <div className={cx(\"inner\")}>\n              <div className={cx(\"admin_actions\")}>\n                <button onClick={handlePublish} className={cx(\"publish_btn\")} disabled={isPublishing}>\n                  {isPublishing ? \"발행 중...\" : \"발행\"}\n                </button>\n                <Link href=\"/admin/create\" className={cx(\"create_btn\")}>\n                  새 포스트 작성\n                </Link>\n\n                {selectedPosts.length > 0 && (\n                  <button\n                    className={cx(\"bulk_delete_btn\")}\n                    onClick={handleDeleteSelected}\n                    disabled={deletingPosts.length > 0}\n                  >\n                    선택한 포스트 삭제 ({selectedPosts.length})\n                  </button>\n                )}\n              </div>\n\n              <div className={cx(\"post_list_header\")}>\n                <div className={cx(\"checkbox_cell\")}>\n                  <input\n                    type=\"checkbox\"\n                    checked={selectedPosts.length === posts.length && posts.length > 0}\n                    onChange={toggleSelectAll}\n                  />\n                </div>\n                <div className={cx(\"title_cell\")}>제목</div>\n                <div className={cx(\"actions_cell\")}>작업</div>\n              </div>\n              <div className={cx(\"post_list\")}>\n                {posts.map((post) => (\n                  <div key={post.slug} className={cx(\"post_item\")}>\n                    <div className={cx(\"checkbox_cell\")}>\n                      <input\n                        type=\"checkbox\"\n                        checked={selectedPosts.includes(post.slug)}\n                        onChange={() => toggleSelectPost(post.slug)}\n                        disabled={isDeleting(post.slug)}\n                      />\n                    </div>\n                    <div className={cx(\"title_cell\")}>\n                      <Link href={`/post/${post.slug}`} className={cx(\"title_link\")}>\n                        {post.title}\n                      </Link>\n                      <div className={cx(\"post_meta\")}>\n                        <span className={cx(\"post_category\")}>{CATEGORY[post.category]}</span>\n                        <span className={cx(\"separator\")}>•</span>\n                        <span className={cx(\"post_date\")}>{formatDate(post.date)}</span>\n                      </div>\n                    </div>\n                    <div className={cx(\"actions_cell\")}>\n                      <button\n                        className={cx(\"action_btn\", \"edit\")}\n                        onClick={() => router.push(`/admin/edit/${post.slug}`)}\n                        disabled={isDeleting(post.slug)}\n                      >\n                        수정\n                      </button>\n                      <button\n                        className={cx(\"action_btn\", \"delete\")}\n                        onClick={() => handleDeletePost(post.slug)}\n                        disabled={isDeleting(post.slug)}\n                      >\n                        {isDeleting(post.slug) ? \"삭제 중...\" : \"삭제\"}\n                      </button>\n                    </div>\n                  </div>\n                ))}\n              </div>\n              {posts.length === 0 && <div className={cx(\"no_posts\")}>포스트가 없습니다.</div>}\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n\n// Switch back to getStaticProps for compatibility with static export\nexport async function getStaticProps() {\n  const allPosts = await getPosts({\n    fields: [\n      \"title\",\n      \"date\",\n      \"slug\",\n      \"author\",\n      \"coverImage\",\n      \"description\",\n      \"ogImage\",\n      \"tag\",\n      \"readingTime\",\n      \"category\",\n    ],\n  });\n\n  const categoryList = await getPostCategories();\n\n  return {\n    props: {\n      allPosts,\n      categoryList,\n    },\n  };\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post_content\":\"admin_post_content__ft_Pe\",\"container\":\"admin_container__sDpJg\",\"-list\":\"admin_-list__X_bjD\",\"inner\":\"admin_inner__jN_HH\",\"project_list\":\"admin_project_list__OuNd9\",\"ifram_wrap\":\"admin_ifram_wrap__aU42G\",\"iframe\":\"admin_iframe__NLBq7\",\"meta\":\"admin_meta__L_vxo\",\"date\":\"admin_date__la_NA\",\"post_meta\":\"admin_post_meta__U_4y9\",\"post_category\":\"admin_post_category__QaYM3\",\"separator\":\"admin_separator__vyCi5\",\"profile_wrap\":\"admin_profile_wrap__EVWVv\",\"profile_image_wrap\":\"admin_profile_image_wrap__XAo1n\",\"textarea\":\"admin_textarea__bh9P0\",\"info\":\"admin_info__2trzw\",\"reading_time\":\"admin_reading_time__Xpbe3\",\"post_title\":\"admin_post_title__J_A2i\",\"tag_area\":\"admin_tag_area__FvAZM\",\"tag\":\"admin_tag__9Px2L\",\"view_badge\":\"admin_view_badge__utAag\",\"post_list_header\":\"admin_post_list_header__Q_fWD\",\"post_list\":\"admin_post_list__djSuc\",\"post_item\":\"admin_post_item__pwAj9\",\"checkbox_cell\":\"admin_checkbox_cell__HiARW\",\"title_cell\":\"admin_title_cell___XYsg\",\"title_link\":\"admin_title_link__DA8PM\",\"actions_cell\":\"admin_actions_cell__4oldf\",\"action_btn\":\"admin_action_btn__TA3_2\",\"edit\":\"admin_edit__euMYR\",\"delete\":\"admin_delete__r3NKS\",\"view\":\"admin_view__M5heO\",\"share\":\"admin_share__guXKz\",\"admin_actions\":\"admin_admin_actions__yn899\",\"create_btn\":\"admin_create_btn__R59bD\",\"bulk_delete_btn\":\"admin_bulk_delete_btn__B0TwG\",\"no_posts\":\"admin_no_posts__UxSux\",\"admin_header\":\"admin_admin_header__yDNef\",\"admin_title\":\"admin_admin_title__SejFK\",\"back_btn\":\"admin_back_btn__gQ1ni\",\"create_form_container\":\"admin_create_form_container__NpHZ8\",\"post_form\":\"admin_post_form__eFezp\",\"form_group\":\"admin_form_group__MYnWL\",\"form_label\":\"admin_form_label__gd9oB\",\"form_input\":\"admin_form_input__K3kki\",\"form_select\":\"admin_form_select__X7DDt\",\"form_textarea\":\"admin_form_textarea__6i55x\",\"form_actions\":\"admin_form_actions__JHbQA\",\"cancel_btn\":\"admin_cancel_btn__y2MwJ\",\"submit_btn\":\"admin_submit_btn__weIP_\",\"error_message\":\"admin_error_message__2Gg_u\",\"publish_btn\":\"admin_publish_btn__0ypl_\"};"],"names":["window","__NEXT_P","push","__webpack_require__","useAdminAuth","router","useRouter","isAuthorized","setIsAuthorized","useState","isLoading","setIsLoading","useEffect","replace","cx","classnames","style","Post","param","allPosts","categoryList","SITE_NAME","selectedPosts","setSelectedPosts","deletingPosts","setDeletingPosts","posts","setPosts","isPublishing","setIsPublishing","formatDate","date","Date","dateString","getFullYear","getMonth","concat","getDate","toggleSelectPost","includes","slug","filter","id","toggleSelectAll","length","map","post","handleDeletePost","confirm","prev","response","fetch","method","ok","errorData","json","message","error","console","alert","Error","handleDeleteSelected","successCount","failCount","handlePublish","headers","isDeleting","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","div","Fragment","isFallback","jsxs","CustomHead","type","className","Header","postList","button","onClick","disabled","Link","href","input","checked","onChange","title","span","CATEGORY","category","module","exports"],"sourceRoot":""}