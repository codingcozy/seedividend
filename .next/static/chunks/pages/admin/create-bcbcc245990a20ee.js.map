{"version":3,"file":"static/chunks/pages/admin/create-bcbcc245990a20ee.js","mappings":"oFACA,CAAAA,OAAAC,QAAA,CAAAD,OAAAC,QAAA,MAAAC,IAAA,EACA,gBACA,WACA,OAAeC,EAAQ,IACvB,EACA,mLCKe,SAASC,EAAWC,CAAuB,CAAE,IAAzB,CAAEC,aAAAA,CAAAA,CAAqB,CAAvBD,EAC3BE,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,IACT,CAAEC,aAAAA,CAAAA,CAAcC,UAAAA,CAAAA,CAAW,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,IAC9B,CAACC,EAAcC,EAAgB,CAAGC,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IAG3CC,EAAe,MAAOC,GAOtB,CACJH,EAAgB,IAChB,GAAI,CAEF,IAAMI,EAAOD,EAASE,KAAK,CACxBC,WAAW,GACXC,OAAO,CAAC,sBAAuB,IAC/BA,OAAO,CAAC,OAAQ,KAEbC,EAAa,CACjB,GAAGL,CAAQ,CACXC,KAAAA,EACAK,KAAMN,EAASM,IAAI,CAACC,KAAK,CAAC,KAAKC,MAAM,CAAC,GAASC,EAAIC,UAAU,CAAC,MAC9DC,KAAM,IAAIC,OAAOC,WAAW,EAC9B,EAEMC,EAAW,MAAMC,MAAM,wCAAyC,CACpEC,OAAQ,OACRC,QAAS,CACP,eAAgB,kBAClB,EACAC,KAAMC,KAAKC,SAAS,CAACf,EACvB,GAEA,GAAI,CAACS,EAASO,EAAE,CAAE,CAChB,IAAMC,EAAY,MAAMR,EAASS,IAAI,EACrC,OAAM,MAAUD,EAAUE,OAAO,EAAI,kBAAmB,CACzD,MAEK,uBACNjC,EAAOL,IAAI,CAAC,SACd,CAAE,MAAOuC,EAAK,CAEZ,MADAC,QAAQC,KAAK,CAAC,uBAAwBF,GAChCA,CAAI,QACF,CACR5B,EAAgB,GAClB,CACF,SAEA,EACS,GAAA+B,EAAAC,GAAA,EAACC,MAAAA,UAAI,YAGTrC,EAKH,GAAAmC,EAAAG,IAAA,EAAAH,EAAAI,QAAA,YACE,GAAAJ,EAAAC,GAAA,EAACI,EAAAA,CAAUA,CAAAA,CAACC,KAAK,SACjB,GAAAN,EAAAC,GAAA,EAACM,EAAAA,CAAUA,CAAAA,CACTC,aAAa,GACbC,eAAe,GACfC,gBAAiBhD,CAAY,CAAC,EAAE,EAAI,GACpCiD,mBAAmB,GACnBC,kBAAkB,GAClBC,YAAY,GACZnD,aAAcA,EACdoD,SAAU3C,EACV4C,iBAAiB,KACjB/C,aAAcA,OAhBX,GAAAgC,EAAAC,GAAA,EAACC,MAAAA,UAAI,eAHb,AAuBH","sources":["webpack://_N_E/?4eb5","webpack://_N_E/./pages/admin/create/index.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/admin/create\",\n      function () {\n        return require(\"private-next-pages/admin/create/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/admin/create\"])\n      });\n    }\n  ","import { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { getPostCategories } from \"@/lib/api\";\nimport CustomHead from \"@/components/CustomHead\";\nimport useAdminAuth from \"@/hooks/useAdminAuth\";\nimport PostEditor from \"@/components/PostEditor\";\n\ntype Props = {\n  categoryList: string[];\n};\n\nexport default function CreatePost({ categoryList }: Props) {\n  const router = useRouter();\n  const { isAuthorized, isLoading } = useAdminAuth();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // 폼 제출 처리\n  const handleSubmit = async (postData: {\n    title: string;\n    content: string;\n    category: string;\n    description: string;\n    coverImage: string;\n    tags: string;\n  }) => {\n    setIsSubmitting(true);\n    try {\n      // 한글을 포함한 슬러그 생성\n      const slug = postData.title\n        .toLowerCase()\n        .replace(/[^a-zA-Z0-9가-힣\\s]/gi, \"\") // 영문, 숫자, 한글, 공백만 허용\n        .replace(/\\s+/g, \"-\");\n\n      const submitData = {\n        ...postData,\n        slug,\n        tags: postData.tags.split(\" \").filter((tag) => tag.startsWith(\"#\")),\n        date: new Date().toISOString(),\n      };\n\n      const response = await fetch(\"http://localhost:3001/api/create-post\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(submitData),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || \"포스트 생성에 실패했습니다.\");\n      }\n\n      alert(\"포스트가 성공적으로 생성되었습니다.\");\n      router.push(\"/admin\");\n    } catch (err) {\n      console.error(\"Error creating post:\", err);\n      throw err;\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  if (isLoading) {\n    return <div>로딩 중...</div>;\n  }\n\n  if (!isAuthorized) {\n    return <div>접근 권한이 없습니다</div>;\n  }\n\n  return (\n    <>\n      <CustomHead type=\"home\" />\n      <PostEditor\n        initialTitle=\"\"\n        initialContent=\"\"\n        initialCategory={categoryList[0] || \"\"}\n        initialDescription=\"\"\n        initialCoverImage=\"\"\n        initialTags=\"\"\n        categoryList={categoryList}\n        onSubmit={handleSubmit}\n        submitButtonText=\"완료\"\n        isSubmitting={isSubmitting}\n      />\n    </>\n  );\n}\n\nexport async function getStaticProps() {\n  const categoryList = await getPostCategories();\n\n  return {\n    props: {\n      categoryList,\n    },\n  };\n}\n"],"names":["window","__NEXT_P","push","__webpack_require__","CreatePost","param","categoryList","router","useRouter","isAuthorized","isLoading","useAdminAuth","isSubmitting","setIsSubmitting","useState","handleSubmit","postData","slug","title","toLowerCase","replace","submitData","tags","split","filter","tag","startsWith","date","Date","toISOString","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","message","err","console","error","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","div","jsxs","Fragment","CustomHead","type","PostEditor","initialTitle","initialContent","initialCategory","initialDescription","initialCoverImage","initialTags","onSubmit","submitButtonText"],"sourceRoot":""}