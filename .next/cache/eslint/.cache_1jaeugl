[{"/Users/user/Desktop/crawling-workspace/autolog-server/blogs/seedividend/pages/_app.tsx":"1","/Users/user/Desktop/crawling-workspace/autolog-server/blogs/seedividend/pages/_document.tsx":"2","/Users/user/Desktop/crawling-workspace/autolog-server/blogs/seedividend/pages/admin/create/index.tsx":"3","/Users/user/Desktop/crawling-workspace/autolog-server/blogs/seedividend/pages/admin/index.tsx":"4","/Users/user/Desktop/crawling-workspace/autolog-server/blogs/seedividend/pages/index.tsx":"5","/Users/user/Desktop/crawling-workspace/autolog-server/blogs/seedividend/pages/post/[slug].tsx":"6","/Users/user/Desktop/crawling-workspace/autolog-server/blogs/seedividend/pages/post/index.tsx":"7","/Users/user/Desktop/crawling-workspace/autolog-server/blogs/seedividend/pages/posts/[category]/[page]/index.tsx":"8","/Users/user/Desktop/crawling-workspace/autolog-server/blogs/seedividend/components/CategoryBox/index.tsx":"9","/Users/user/Desktop/crawling-workspace/autolog-server/blogs/seedividend/components/CategoryList/index.tsx":"10","/Users/user/Desktop/crawling-workspace/autolog-server/blogs/seedividend/components/CustomHead/index.tsx":"11","/Users/user/Desktop/crawling-workspace/autolog-server/blogs/seedividend/components/GoogleAd/index.tsx":"12","/Users/user/Desktop/crawling-workspace/autolog-server/blogs/seedividend/components/Header/index.tsx":"13","/Users/user/Desktop/crawling-workspace/autolog-server/blogs/seedividend/components/PostList/index.tsx":"14","/Users/user/Desktop/crawling-workspace/autolog-server/blogs/seedividend/components/Section/index.tsx":"15","/Users/user/Desktop/crawling-workspace/autolog-server/blogs/seedividend/components/SectionTitle/index.tsx":"16","/Users/user/Desktop/crawling-workspace/autolog-server/blogs/seedividend/lib/api.ts":"17","/Users/user/Desktop/crawling-workspace/autolog-server/blogs/seedividend/lib/constants.ts":"18","/Users/user/Desktop/crawling-workspace/autolog-server/blogs/seedividend/lib/markdownToHtml.js":"19"},{"size":434,"mtime":1745417464017,"results":"20","hashOfConfig":"21"},{"size":1807,"mtime":1745417930002,"results":"22","hashOfConfig":"21"},{"size":15756,"mtime":1746375798739,"results":"23","hashOfConfig":"21"},{"size":9987,"mtime":1746375736093,"results":"24","hashOfConfig":"21"},{"size":1417,"mtime":1745510170961,"results":"25","hashOfConfig":"21"},{"size":5678,"mtime":1745509247519,"results":"26","hashOfConfig":"21"},{"size":1881,"mtime":1745508926284,"results":"27","hashOfConfig":"21"},{"size":5163,"mtime":1745510533536,"results":"28","hashOfConfig":"21"},{"size":839,"mtime":1745508163684,"results":"29","hashOfConfig":"21"},{"size":790,"mtime":1745504969773,"results":"30","hashOfConfig":"21"},{"size":5804,"mtime":1721732531275,"results":"31","hashOfConfig":"21"},{"size":584,"mtime":1714545953096,"results":"32","hashOfConfig":"21"},{"size":5770,"mtime":1746367651345,"results":"33","hashOfConfig":"21"},{"size":5060,"mtime":1745417930001,"results":"34","hashOfConfig":"21"},{"size":820,"mtime":1745418695832,"results":"35","hashOfConfig":"21"},{"size":378,"mtime":1745510205005,"results":"36","hashOfConfig":"21"},{"size":3519,"mtime":1745506771791,"results":"37","hashOfConfig":"21"},{"size":942,"mtime":1745508758159,"results":"38","hashOfConfig":"21"},{"size":779,"mtime":1719477071737,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xvom16",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/user/Desktop/crawling-workspace/autolog-server/blogs/seedividend/pages/_app.tsx",[],[],"/Users/user/Desktop/crawling-workspace/autolog-server/blogs/seedividend/pages/_document.tsx",["99","100"],[],"import { Html, Head, Main, NextScript } from \"next/document\";\nimport Script from \"next/script\";\n\nexport default function Document() {\n  return (\n    <Html lang=\"ko\">\n      <Head>\n        <meta name=\"google-site-verification\" content=\"a-yehRo3k3xv7fg6LqRaE8jlE42e5wP2bDE_2F849O4\" />\n        <link rel=\"stylesheet\" href=\"/favicons/favicon.ico\" />\n        <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/assets/favicons/favicon-16x16.png\" />\n        <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/assets/favicons/favicon-32x32.png\" />\n        <link rel=\"icon\" type=\"image/png\" sizes=\"96x96\" href=\"/assets/favicons/favicon-96x96.png\" />\n        <link rel=\"icon\" href=\"/favicons/apple-icon-180x180.png\" />\n        <link rel=\"apple-touch-icon\" href=\"/favicons/apple-icon-180x180.png\" />\n        <link rel=\"apple-touch-startup-image\" href=\"/startup.png\" />\n        <meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n        <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\" />\n        <meta name=\"msapplication-config\" content=\"/favicons/browserconfig.xml\" />\n        <script async src=\"https://www.googletagmanager.com/gtag/js?id=G-BP4J5BPNQN\"></script>\n        <script\n          dangerouslySetInnerHTML={{\n            __html: `window.dataLayer = window.dataLayer || [];\n            function gtag(){dataLayer.push(arguments);}\n            gtag('js', new Date());\n          \n            gtag('config', 'G-BP4J5BPNQN');`,\n          }}\n        ></script>\n        <Script\n          async\n          src={`https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4877378276818686`}\n          strategy=\"lazyOnload\"\n          crossOrigin=\"anonymous\"\n        />\n      </Head>\n      <body>\n        <Main />\n        <NextScript />\n      </body>\n    </Html>\n  );\n}\n","/Users/user/Desktop/crawling-workspace/autolog-server/blogs/seedividend/pages/admin/create/index.tsx",[],[],"/Users/user/Desktop/crawling-workspace/autolog-server/blogs/seedividend/pages/admin/index.tsx",[],[],"/Users/user/Desktop/crawling-workspace/autolog-server/blogs/seedividend/pages/index.tsx",[],[],"/Users/user/Desktop/crawling-workspace/autolog-server/blogs/seedividend/pages/post/[slug].tsx",[],[],"/Users/user/Desktop/crawling-workspace/autolog-server/blogs/seedividend/pages/post/index.tsx",[],[],"/Users/user/Desktop/crawling-workspace/autolog-server/blogs/seedividend/pages/posts/[category]/[page]/index.tsx",["101"],[],"import { useRouter } from \"next/router\";\nimport ErrorPage from \"next/error\";\nimport { getPostCategories, getPosts } from \"@/lib/api\";\nimport type PostType from \"@/interfaces/post\";\nimport Header from \"@/components/Header\";\nimport style from \"../../posts.module.scss\";\nimport classnames from \"classnames/bind\";\n\nimport CustomHead from \"@/components/CustomHead\";\nimport PostList from \"@/components/PostList\";\nimport SectionTitle from \"@/components/SectionTitle\";\nimport { useEffect, useState } from \"react\";\nimport Link from \"next/link\";\nimport { CATEGORY, SITE_NAME } from \"@/lib/constants\";\n\nconst cx = classnames.bind(style);\ntype Props = {\n  category: string;\n  categoryList: string[];\n  allPosts: PostType[];\n  posts: PostType[];\n  page: number;\n  totalPageCount: number;\n  totalPageGroupCount: number;\n  lastPageGroup: number;\n  currentPageGroup: number;\n};\n\nexport const PAGE_SIZE = 10;\nexport const PER_PAGE_SIZE = 20;\nexport const PAGE_KEY = `__${SITE_NAME}_CURRENT_PAGE__`;\nexport const PAGEGROUP_KEY = `__${SITE_NAME}_CURRENT_PAGE_GROUP__`;\n\nexport default function Post({\n  category,\n  categoryList,\n  allPosts,\n  posts,\n  page,\n  totalPageCount,\n  totalPageGroupCount,\n  currentPageGroup,\n  lastPageGroup,\n}: Props) {\n  const router = useRouter();\n\n  const [currentPageGroupS, setCurrentPageGroupS] = useState(currentPageGroup);\n  const [lastPageGroupS, setLastPageGroupS] = useState(lastPageGroup);\n\n  const onClickPageGroup = (nextPageGroup: number) => {\n    nextPageGroup = nextPageGroup < 0 ? 0 : nextPageGroup;\n    setCurrentPageGroupS(nextPageGroup);\n  };\n\n  useEffect(() => {\n    console.log(currentPageGroupS, totalPageGroupCount);\n    if (currentPageGroupS + 1 === totalPageGroupCount) {\n      setLastPageGroupS(totalPageCount % PER_PAGE_SIZE === 0 ? PER_PAGE_SIZE : totalPageCount % PER_PAGE_SIZE);\n    } else {\n      setLastPageGroupS(PER_PAGE_SIZE);\n    }\n  }, [currentPageGroupS, lastPageGroup]);\n\n  useEffect(() => {}, [lastPageGroupS]);\n  return (\n    <>\n      {router.isFallback ? (\n        \" Loading…\"\n      ) : (\n        <>\n          <CustomHead type=\"post\" />\n          <div className={cx(\"container\", \"-list\")}>\n            <Header postList={allPosts} categoryList={categoryList} />\n            <div className={cx(\"inner\")}>\n              <article>\n                <SectionTitle title={CATEGORY[category]}></SectionTitle>\n                <div className={cx(\"project_list\")}>\n                  <PostList postList={posts}></PostList>\n                </div>\n              </article>\n              <div className={cx(\"pagination\")}>\n                {currentPageGroupS > 0 && (\n                  <button\n                    type=\"button\"\n                    className={cx(\"page_button\", \"-prev\")}\n                    onClick={() => onClickPageGroup(currentPageGroupS - 1)}\n                  >\n                    &lt;\n                  </button>\n                )}\n                {Array.from({ length: lastPageGroupS }, (_, i) => {\n                  const pageNum = PER_PAGE_SIZE * currentPageGroupS + (i + 1);\n\n                  return (\n                    <Link\n                      key={i}\n                      className={cx(\"link\", { \"-active\": pageNum === +page })}\n                      href={`/posts/${category}/${PER_PAGE_SIZE * currentPageGroupS + (i + 1)}`}\n                    >\n                      {pageNum}\n                    </Link>\n                  );\n                })}\n                {currentPageGroupS + 1 < totalPageGroupCount && (\n                  <button\n                    type=\"button\"\n                    className={cx(\"page_button\", \"-prev\")}\n                    onClick={() => onClickPageGroup(currentPageGroupS + 1)}\n                  >\n                    {\">\"}\n                  </button>\n                )}\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n\ntype Params = {\n  params: {\n    category: string;\n    page: string;\n  };\n};\n\nexport async function getStaticProps({ params }: Params) {\n  const allPosts = await getPosts({\n    fields: [\"title\", \"date\", \"slug\", \"author\", \"coverImage\", \"description\", \"ogImage\", \"tag\", \"readingTime\"],\n  });\n\n  const categoryList = await getPostCategories();\n\n  const res: any = await getPosts({\n    fields: [\n      \"title\",\n      \"description\",\n      \"date\",\n      \"slug\",\n      \"author\",\n      \"content\",\n      \"ogImage\",\n      \"coverImage\",\n      \"date\",\n      \"tag\",\n      \"readingTime\",\n    ],\n    category: params.category,\n    page: params.page,\n  });\n\n  return {\n    props: { ...res, page: params.page, allPosts, categoryList, category: params.category },\n  };\n}\n\nexport async function getStaticPaths() {\n  const categories = await getPostCategories();\n\n  let paths = [];\n\n  for (let i in categories) {\n    const category = categories[i];\n\n    const posts: any = await getPosts({ category: category, fields: [\"slug\"] });\n    const totalPageCount = Math.ceil(posts.length / PAGE_SIZE);\n\n    for (let i = 0; i < totalPageCount; i++) {\n      paths.push({\n        params: {\n          category,\n          page: String(i + 1),\n        },\n      });\n    }\n  }\n\n  return {\n    paths,\n    fallback: false,\n  };\n}\n","/Users/user/Desktop/crawling-workspace/autolog-server/blogs/seedividend/components/CategoryBox/index.tsx",[],[],"/Users/user/Desktop/crawling-workspace/autolog-server/blogs/seedividend/components/CategoryList/index.tsx",[],[],"/Users/user/Desktop/crawling-workspace/autolog-server/blogs/seedividend/components/CustomHead/index.tsx",[],[],"/Users/user/Desktop/crawling-workspace/autolog-server/blogs/seedividend/components/GoogleAd/index.tsx",[],[],"/Users/user/Desktop/crawling-workspace/autolog-server/blogs/seedividend/components/Header/index.tsx",[],[],"/Users/user/Desktop/crawling-workspace/autolog-server/blogs/seedividend/components/PostList/index.tsx",[],[],"/Users/user/Desktop/crawling-workspace/autolog-server/blogs/seedividend/components/Section/index.tsx",[],[],"/Users/user/Desktop/crawling-workspace/autolog-server/blogs/seedividend/components/SectionTitle/index.tsx",[],[],"/Users/user/Desktop/crawling-workspace/autolog-server/blogs/seedividend/lib/api.ts",[],[],"/Users/user/Desktop/crawling-workspace/autolog-server/blogs/seedividend/lib/constants.ts",[],[],"/Users/user/Desktop/crawling-workspace/autolog-server/blogs/seedividend/lib/markdownToHtml.js",[],[],{"ruleId":"102","severity":1,"message":"103","line":9,"column":9,"nodeType":"104","endLine":9,"endColumn":63},{"ruleId":"105","severity":1,"message":"106","line":19,"column":9,"nodeType":"104","endLine":19,"endColumn":86},{"ruleId":"107","severity":1,"message":"108","line":62,"column":6,"nodeType":"109","endLine":62,"endColumn":40,"suggestions":"110"},"@next/next/no-css-tags","Do not include stylesheets manually. See: https://nextjs.org/docs/messages/no-css-tags","JSXOpeningElement","@next/next/next-script-for-ga","Prefer `next/script` component when using the inline script for Google Analytics. See: https://nextjs.org/docs/messages/next-script-for-ga","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'totalPageCount' and 'totalPageGroupCount'. Either include them or remove the dependency array. If 'setLastPageGroupS' needs the current value of 'totalPageCount', you can also switch to useReducer instead of useState and read 'totalPageCount' in the reducer.","ArrayExpression",["111"],{"desc":"112","fix":"113"},"Update the dependencies array to be: [currentPageGroupS, lastPageGroup, totalPageCount, totalPageGroupCount]",{"range":"114","text":"115"},[1884,1918],"[currentPageGroupS, lastPageGroup, totalPageCount, totalPageGroupCount]"]